Los ejercicios que no están aca, los tengo en papel. Tendría que sacarle foto y subirlos

Eje2: 
a) En una heap de altura h, puede haber como minimo 2^(h-1) + 1 elementos. [a chequear]
b) En una max heap, el elemento minimo se encuentra en una hoja.
c) No es una maxheap, porque para que sea una maxheap, el nodo padre tiene que ser mayor a sus hijos,
caso que no cumple con el nodo6 (nodo padre) que tiene en uno de sus hijos, un nodo7.

Eje3: 
 Primer arbol: No representa una heap, porque no cumple con la propiedad de que se debe llenar de izquierda a derecha.
 Segundo arbol: No representa una heap, porue no cumple con un criterio de orden (maxheap o minheap)

Ejercicio 12
¿Cuáles de los siguientes arreglos representan una max-heap, min-heap o ninguna de las dos?
• arreglo 1: 0 1 2 0 4 5 6 7 8 9 => Ninguna de las dos. Ya el 0 de la 4 pos rompe con la condición de minheap

• arreglo 2: 9 8 7 6 5 4 3 2 1 0 => Es una MaxHeap.

• arreglo 3: 5 5 5 6 6 6 6 7 7 1=> Ninguna de las dos.

• arreglo 4: 9 3 9 2 1 6 7 1 2 1 => Max heap con elementos repetidos.

• arreglo 5: 8 7 6 1 2 3 4 2 1 2=> Ninguna de las dos.

Ejercicio 13
Un arreglo de 7 enteros se ordena ascendentemente usando el algoritmo HeapSort. Luego de la fase
inicial del algoritmo (la construcción de la heap), ¿cuál de los siguientes es un posible orden del arreglo?
(a) 85 78 45 51 53 47 49
(b) 85 49 78 45 47 51 53
(c) 85 78 49 45 47 51 53
(d) 45 85 78 53 51 49 47
(e) 85 51 78 53 49 47 45

La opción posible podría ser la b) es la unica que cumple con la max heap

En una Heap, ¿para un elemento que está en la posición i su hijo derecho está en la posición……?
(a) | i/2 |
(b) 2*i
(c) 2*i + 1
(d) Ninguna de las anteriores

respuesta correcta: c) 

Ejercicio 15
¿Siempre se puede decir que un árbol binario lleno es una Heap?
(a) Sí (b) No

un arbol binario puede estar lleno, pero si no cumple con las propiedades de minheap o maxheap, no se considera una heap.


Ejercicio 16: 
 
La operación que agrega un elemento a la heap que tiene n elementos, en el peor caso es de ……
(a) O(n)
(b) O(n log n)
(c) O(log n)
(d) Ninguna de las otras opciones

Tiene un tiempo de ejecución en el peor caso de O(log n), donde "n" es el número de elementos en el heap.
La razón de esto es que, en el peor caso, el nuevo elemento debe ser agregado en la hoja más baja y más a la derecha del árbol, y luego se debe "subir" en el árbol comparándolo con su padre repetidamente para evaluar que se cumpla la propiedad de heap. 

Dado que la altura de un árbol binario completo con "n" nodos es log(n), el tiempo de ejecución en el peor caso para agregar un elemento es O(log n).

 la opción correcta es (c) O(log n).

Ejercicio 19
El algoritmo HeapSort consta de dos etapas:
1) se construye una heap y
2) se realizan los intercambios necesarios para dejar ordenados los datos.
Asuma que la heap ya está construida y es la siguiente:
58 38 53 23 28 40 35 18
¿Cómo quedan los datos en el arreglo después de ejecutar sólo 2 pasos de la segunda etapa del
Heapsort?
Algoritmos y Estructuras de Datos
-
Cursada 2024
(a) 40 38 23 28 35 18 53 58
(b) 53 38 40 23 28 18 35 58
(c) 40 38 23 35 28 18 53 58
(d) 40 38 35 23 28 18 53 58


Respuesta correcta: d) 

Ejercicio 20
Dada la Min-Heap 3, 8, 5, 15, 10, 7, 19, 28, 16, 25, 12. ¿En qué posición está ubicado el hijo derecho de
la clave 15?
(a) 7
(b) 8
(c) 9
(d) 10

La opcion correcta es la opcion c). 
Para encontrar la posicion del hijo derecho (en este caso el 15 ) tenemos que agarrar la posicion del elemento a buscar (15 esta en la pos 4), multiplicarla por 2 y sumarle 1
La formula seria algo asi: (2*i)+1. Siendo i en este caso la posicion donde se encuentra el 15. (pos 4)


